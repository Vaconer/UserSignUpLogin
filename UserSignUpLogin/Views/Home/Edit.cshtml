@model UserSignUpLogin.Models.TBLUserInfo

@{
    ViewBag.Title = "Edit";
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>@ViewBag.Title</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <style>
        body {
            overflow: hidden; /* Remover barra de rolagem */
            opacity: 0; /* Inicialmente torna o corpo invisível */
            transition: opacity 0.5s ease; /* Adiciona uma transição suave */
        }

        /* Estilos CSS para o formulário */
        #formulario {
            padding-left: 5%;
        }

        .login {
            color: #000;
            text-transform: uppercase;
            letter-spacing: 2px;
            padding-left: 30%;
            display: block;
            font-weight: bold;
            font-size: x-large;
        }

        .card {
            display: flex;
            justify-content: center;
            padding-left: 5%;
            min-height: 350px;
            width: 70%;
            flex-direction: column;
            gap: 35px;
            background: #f5f5f5;
            box-shadow: 5px 5px 10px #c8c8c8, -16px -16px 32px #fefefe;
            border-radius: 8px;
        }

        .inputBox {
            position: relative;
            padding-bottom: 3%;
            width: 170%;
        }

            .inputBox input {
                width: 100%;
                padding: 10px;
                outline: none;
                border: none;
                color: #000;
                font-size: 1em;
                background: transparent;
                border-left: 2px solid #000;
                border-bottom: 2px solid #000;
                transition: 0.1s;
                border-bottom-left-radius: 8px;
            }

            .inputBox span {
                margin-top: 5px;
                position: absolute;
                left: 0;
                transform: translateY(-4px);
                margin-left: 10px;
                padding: 10px;
                pointer-events: none;
                font-size: 12px;
                color: #000;
                text-transform: uppercase;
                transition: 0.5s;
                letter-spacing: 3px;
                border-radius: 8px;
            }

            .inputBox input:valid ~ span,
            .inputBox input:focus ~ span {
                transform: translateX(113px) translateY(-15px);
                font-size: 0.8em;
                padding: 5px 10px;
                background: #000;
                letter-spacing: 0.2em;
                color: #fff;
                border: 2px;
            }

            .inputBox input:valid,
            .inputBox input:focus {
                border: 2px solid #000;
                border-radius: 8px;
            }

        .enter {
            height: 45px;
            width: 100px;
            border-radius: 5px;
            border: 2px solid #000;
            cursor: pointer;
            background-color: transparent;
            transition: 0.5s;
            text-transform: uppercase;
            font-size: 10px;
            letter-spacing: 2px;
            margin-bottom: 1em;
        }

            .enter:hover {
                background-color: rgb(0, 0, 0);
                color: white;
            }

        .link a {
            text-decoration: none;
            color: #000080;
        }

            .link a:hover {
                color: #1E90FF;
            }

        .circle {
            position: fixed;
            bottom: -10%; /* Ajuste para a distância desejada do topo */
            left: 50%; /* Ajuste para a distância desejada da direita */
            width: 100%;
            height: 200%;
            background-color: green;
            border-radius: 50%; /* Torna o elemento um círculo */
            z-index: -1; /* Garante que o círculo fique atrás do conteúdo */
        }
    </style>
</head>
<body>

    <div class="container">
        <div class="row">
            <div class="col-md-6 mt-5" id="formulario">
                <!-- Removida a classe de animação -->
                <br /><br /><br />
                <div class="card">
                    <h2 class="login">Edit</h2>
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()
                        <div class="inputBox">
                            <!-- O campo IDUs não será exibido para edição -->
                            @Html.HiddenFor(model => model.IDUs)
                        </div>

                        <div class="inputBox">
                            @Html.EditorFor(model => model.UsernameUS, new { @required = "required", @class = "input" })
                            <span>Username</span>
                        </div>

                        <div class="inputBox">
                            @Html.PasswordFor(model => model.PassWordUs, new { @required = "required", @class = "input" })
                            <span>Password</span>
                            @Html.ValidationMessageFor(model => model.PassWordUs, "", new { @class = "text-danger", @style = "position: absolute; top: 17%; left: 42%; transform: translateY(-50%); width: 100%; text-align: center; border: none; background: none; font-size: 10px;" })
                        </div>

                        <div class="inputBox">
                            @Html.PasswordFor(model => model.rePassWordUs, new { @required = "required", @class = "input" })
                            <span>Confirm Password</span>
                            @Html.ValidationMessageFor(model => model.rePassWordUs, "", new { @class = "text-danger", @style = "position: absolute; top: 17%; left: 42%; transform: translateY(-50%); width: 100%; text-align: center; border: none; background: none; font-size: 10px;" })
                        </div>


                        <button type="submit" class="enter">Save</button>
                    }
                    <div class="link">
                        @Html.ActionLink("Back to List", "Index")
                    </div>
                </div>
            </div>

            <div class="col-md-6">
                <img src="https://www.pngmart.com/files/1/Green-Mango-PNG.png" class="img-fluid hidden" alt="Phone image" loading="lazy">
            </div>

            <div class="circle"></div>
        </div>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

    <script>
        const img = new Image();
        img.onload = function () {
            document.querySelector('.hidden').classList.remove('hidden');
            document.getElementById('formulario').classList.add('animate__animated', 'animate__fadeInLeft'); // Adiciona a animação após o carregamento da imagem
            document.body.style.opacity = 1; // Torna o corpo visível após o carregamento da imagem
        };
        img.src = 'https://www.pngmart.com/files/1/Green-Mango-PNG.png';
    </script>

</body>
</html>
